<?php

/**
 * BaseThread
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $state
 * @property array $posts_status_number
 * @property Doctrine_Collection $Posts
 * 
 * @method string              getTitle()               Returns the current record's "title" value
 * @method string              getState()               Returns the current record's "state" value
 * @method array               getPostsStatusNumber()   Returns the current record's "posts_status_number" value
 * @method Doctrine_Collection getPosts()               Returns the current record's "Posts" collection
 * @method Thread              setTitle()               Sets the current record's "title" value
 * @method Thread              setState()               Sets the current record's "state" value
 * @method Thread              setPostsStatusNumber()   Sets the current record's "posts_status_number" value
 * @method Thread              setPosts()               Sets the current record's "Posts" collection
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseThread extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('thread');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('posts_status_number', 'array', null, array(
             'type' => 'array',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Post as Posts', array(
             'local' => 'id',
             'foreign' => 'thread_id'));

        $attributeupdatable0 = new AttributeUpdatable(array(
             'referencesModels' => 
             array(
              'AnotherThread' => 
              array(
              'onDelete' => 'SET NULL',
              'locateMapping' => 
              array(
               'locateMapping1' => 
               array(
               'referenceLocateAttribute' => 'referenceId',
               'localLocateAttribute' => 'id',
               ),
               'locateMapping2' => 
               array(
               'referenceLocateAttribute' => 'referenceType',
               'localLocateValue' => 1,
               ),
              ),
              'updateMapping' => 
              array(
               'mapping1' => 
               array(
               'localAttribute' => 'state',
               'referenceAttribute' => 'status',
               'localValues' => 
               array(
                0 => 0,
                1 => 1,
                2 => 2,
               ),
               'referenceValues' => 
               array(
                0 => 0,
                1 => 1,
                2 => 0,
               ),
               ),
              ),
              ),
              'AnotherThread1' => 
              array(
              'onDelete' => 'CASCADE',
              'locateMapping' => 
              array(
               'locateMapping1' => 
               array(
               'referenceLocateAttribute' => 'referenceId',
               'localLocateAttribute' => 'id',
               ),
               'locateMapping2' => 
               array(
               'referenceLocateAttribute' => 'referenceType',
               'localLocateValue' => 1,
               ),
              ),
              'updateMapping' => 
              array(
               'mapping1' => 
               array(
               'localAttribute' => 'state',
               'referenceAttribute' => 'status',
               'localValues' => 
               array(
                0 => 0,
                1 => 1,
                2 => 2,
               ),
               'referenceValues' => 
               array(
                0 => 2,
                1 => 1,
                2 => 0,
               ),
               ),
              ),
              ),
             ),
             ));
        $this->actAs($attributeupdatable0);
    }
}