<?php

/**
 * BasePost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $thread_id
 * @property clob $body
 * @property string $title
 * @property Thread $Thread
 * @property PostAutoComplete $PostAutoComplete
 * 
 * @method integer          getThreadId()         Returns the current record's "thread_id" value
 * @method clob             getBody()             Returns the current record's "body" value
 * @method string           getTitle()            Returns the current record's "title" value
 * @method Thread           getThread()           Returns the current record's "Thread" value
 * @method PostAutoComplete getPostAutoComplete() Returns the current record's "PostAutoComplete" value
 * @method Post             setThreadId()         Sets the current record's "thread_id" value
 * @method Post             setBody()             Sets the current record's "body" value
 * @method Post             setTitle()            Sets the current record's "title" value
 * @method Post             setThread()           Sets the current record's "Thread" value
 * @method Post             setPostAutoComplete() Sets the current record's "PostAutoComplete" value
 * 
 * @package    jobeet
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post');
        $this->hasColumn('thread_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Thread', array(
             'local' => 'thread_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PostAutoComplete', array(
             'local' => 'id',
             'foreign' => 'post_id'));
    }
}