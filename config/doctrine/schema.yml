# config/doctrine/schema.yml
JobeetCategory:
  actAs: 
    Timestampable: ~
    Sluggable:
      fields: [name]
  columns:
    name: { type: string(255), notnull: true, unique: true }
 
JobeetJob:
  actAs: { Timestampable: ~ }
  columns:
    category_id:  { type: integer, notnull: true }
    type:         { type: string(255) }
    company:      { type: string(255), notnull: true }
    logo:         { type: string(255) }
    url:          { type: string(255) }
    position:     { type: string(255), notnull: true, readonly: true}
    location:     { type: string(255), notnull: true }
    description:  { type: string(4000), notnull: true }
    how_to_apply: { type: string(4000), notnull: true }
    token:        { type: string(255), notnull: true, unique: true }
    is_public:    { type: boolean, notnull: true, default: 1 }
    is_activated: { type: boolean, notnull: true, default: 0 }
    email:        { type: string(255), notnull: true }
    expires_at:   { type: timestamp, notnull: true }
  relations:
    JobeetCategory: { onDelete: CASCADE, local: category_id, foreign: id, foreignAlias: JobeetJobs } 
 
JobeetAffiliate:
  actAs: { Timestampable: ~ }
  columns:
    url:       { type: string(255), notnull: true }
    email:     { type: string(255), notnull: true, unique: true }
    token:     { type: string(255), notnull: true }
    is_active: { type: boolean, notnull: true, default: 0 }
  relations:
    JobeetCategories:
      class: JobeetCategory
      refClass: JobeetCategoryAffiliate
      local: affiliate_id
      foreign: category_id
      foreignAlias: JobeetAffiliates
 
JobeetCategoryAffiliate:
  columns:
    category_id:  { type: integer, primary: true }
    affiliate_id: { type: integer, primary: true }
  relations:
    JobeetCategory:  { onDelete: CASCADE, local: category_id, foreign: id }
    JobeetAffiliate: { onDelete: CASCADE, local: affiliate_id, foreign: id }
    
Thread:
  columns:
    title:
      type: string(255)
      notnull: true
    posts_status_number:
      type: array

AnotherThread:
  columns:
    title:
      type: string(255)
      notnull: true 
      
      
      

      
    
Post:
  actAs:
    AutoCompleteSource:
      className: PostAutoComplete
      autoCompleteField: name
    CountCache:
      relations:
        #Thread:
          #cache_type: normal
          #columnName: posts_number
          #foreignAlias: Posts
        #Thread:
          #cache_type: cacheids
          #columnName: posts_ids
          #foreignAlias: Posts
         Thread:
          cache_type: attributecache
          columnName: posts_status_number
          targetAttribute: post_type
          attributeValues: [0,1,2]
          foreignAlias: Posts
  columns:
    thread_id:
      type: integer
      notnull: true
    body:
      type: clob
      notnull: true
    name:
      type: string(255)
    post_type:
      type: integer
      
  relations:
    Thread:
      local: thread_id
      foreign: id
      onDelete: CASCADE
      foreignAlias: Posts
      
PostAutoComplete:
  actAs:
    AutoCompletable:
      relation:
        Post:
          defaultScore: 50
  columns:
    post_id: 
      type: integer
      notnull: false
  relations:
    Post:
      local: post_id
      foreign: id
      onDelete: SET NULL
      foreignAlias: AutoCompleteRecord
      foreignType: one  
      onDelete: SET NULL
      
      
RandomAutoComplete:
  actAs: [AutoCompletable]

PostClone:
  actAs:
    Testable:
      scoreColumn: score
      className: Post
      clonedFields: [body,title]
  columns:
    thread_id:
      type: integer
    body:
      type: clob
      notnull: true
    title:
      type: string(255)
    score:
      type: integer
    post_id:
      type: integer


